def decode(code, key):
    alpa = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p",
            "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]
    res = ""
    s = str(key)
    for i in range(len(code)):
        res += alpa[code[i] - int(s[i % len(s)]) - 1]
    return res


from itertools import cycle
from string import ascii_lowercase


def decode1(code, key):
    keys = cycle(map(int, str(key)))
    return ''.join(ascii_lowercase[n - next(keys) - 1] for n in code)


# ----------------------------------------------------------------------------------- benchmark: 2 tests -----------------------------------------------------------------------------------
# Name (time in us)        Min                 Max              Mean            StdDev            Median               IQR              Outliers  OPS (Kops/s)            Rounds  Iterations
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# decode                 1.9073 (1.0)       93.9369 (1.0)      2.4517 (1.0)      1.7114 (1.45)     2.1458 (1.0)      0.9537 (4.00)      1558;1558      407.8855 (1.0)       91181           1
# decode1                  2.2054 (1.16)     151.5150 (1.61)     2.6721 (1.09)     1.1788 (1.0)      2.5034 (1.17)     0.2384 (1.0)      7013;10608      374.2370 (0.92)      99865           4
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
