from main import done_or_not


def test(benchmark):
    assert benchmark(done_or_not, [[1, 3, 2, 5, 7, 9, 4, 6, 8]
        , [4, 9, 8, 2, 6, 1, 3, 7, 5]
        , [7, 5, 6, 3, 8, 4, 2, 1, 9]
        , [6, 4, 3, 1, 5, 8, 7, 9, 2]
        , [5, 2, 1, 7, 9, 3, 8, 4, 6]
        , [9, 8, 7, 4, 2, 6, 5, 3, 1]
        , [2, 1, 4, 9, 3, 5, 6, 8, 7]
        , [3, 6, 5, 8, 1, 7, 9, 2, 4]
        , [8, 7, 9, 6, 4, 2, 1, 5, 3]]) == 'Finished!'


def test2(benchmark):
    assert benchmark(done_or_not, [[1, 3, 2, 5, 7, 9, 4, 6, 8]
        , [4, 9, 8, 2, 6, 1, 3, 7, 5]
        , [7, 5, 6, 3, 8, 4, 2, 1, 9]
        , [6, 4, 3, 1, 5, 8, 7, 9, 2]
        , [5, 2, 1, 7, 9, 3, 8, 4, 6]
        , [9, 8, 7, 4, 2, 6, 5, 3, 1]
        , [2, 1, 4, 9, 3, 5, 6, 8, 7]
        , [3, 6, 5, 8, 1, 7, 9, 2, 4]
        , [8, 7, 9, 6, 4, 2, 1, 5, 3]]) == 'Finished!'


''''''''''
------------------------------------------------------------------------------------ benchmark: 2 tests -----------------------------------------------------------------------------------
Name (time in us)         Min                 Max               Mean            StdDev             Median               IQR            Outliers  OPS (Kops/s)            Rounds  Iterations
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
test                  20.1850 (1.0)       90.8420 (1.0)      20.9247 (1.0)      1.9717 (1.0)      20.4920 (1.0)      0.1130 (1.0)      616;2882       47.7903 (1.0)       22710           1
test2                 20.2450 (1.00)     108.3390 (1.19)     21.3746 (1.02)     2.7413 (1.39)     20.5600 (1.00)     0.2150 (1.90)     849;7183       46.7845 (0.98)      30500           1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Legend:
  Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.
  OPS: Operations Per Second, computed as 1 / Mean
============================================================================ 2 passed in 2.49 seconds =============================================================================
'''''''''
